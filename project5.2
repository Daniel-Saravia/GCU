#include <iostream>
using namespace std;
bool isSlip(string str) {
  // check for D or E
  if (str[0] == 'D' || str[0] == 'E') {
    // check for F or F's
    for (int i = 1; i < str.length() && str[i] == 'F'; i++) {
      // end if G
      // str.length() is very important because
      // it checks if i is within the bounds of the string
      if (i + 1 < str.length() && str[i + 1] == 'G') {
        return true;
        // recursion if i = D or E
      } else if (i + 1 < str.length() &&
                 (str[i + 1] == 'D' || str[i + 1] == 'E')) {
        return isSlip(str.substr(i + 1));
      } else if (str[i + 1] == 'F') {
        continue;
      } else {
        return false;
      }
    }
  } else {
    return false;
  }
}

bool isSlap(string str) {
  // check for 'A'
  if (str[0] == 'A') {
    // check for 'AH'
    if (str[1] == 'H' && str.length() == 2) {
      return true;
    }
    // check for 'B' -> 'Slap'
    else if (str[1] == 'B' && str[2] == 'A') {
      return isSlap(str.substr(2));
    } else if (str[1] == 'C') {
      return true;
    } else if (str[1] == 'D' || str[1] == 'E') {
      return isSlip(str.substr(1));
    } else if (str[1] == 'C') {
      return true;
    }
  } else {
    return false;
  }
}
int main() {
  cout << "Hello World!\n";
  // // Slips
  // string myStrings[10];
  // myStrings[0] = "DFG";
  // myStrings[1] = "EFG";
  // myStrings[2] = "DFFFFFG";
  // myStrings[3] = "DFDFDFDFG";
  // myStrings[4] = "DFEFFFFFG";
  // // not Slips
  // myStrings[5] = "DFEFF";
  // myStrings[6] = "EFAHG";
  // myStrings[7] = "DEFG";
  // myStrings[8] = "DG";
  // myStrings[9] = "EFFFFDG";
  // for (int i = 0; i < 10; i++) {
  //   cout << isSlip(myStrings[i]) << endl;
  // }

  // Slaps
  string myStrings_2[13];
  myStrings_2[0] = "AH";
  myStrings_2[1] = "ABAHC";
  myStrings_2[2] = "ABABAHCC";
  myStrings_2[3] = "ADFGC";
  myStrings_2[4] = "ADFFFFGC";
  myStrings_2[5] = "ABAEFGCC";
  myStrings_2[6] = "ADFDFGC";
  //  not Slaps
  myStrings_2[7] = "ABC";
  myStrings_2[8] = "DGABAH";
  myStrings_2[9] = "DFGC";
  myStrings_2[10] = "ABABAHC";
  myStrings_2[11] = "SLAP";
  myStrings_2[12] = "ADGC";

  for (int i = 0; i < 13; i++) {
    cout << i << " " << isSlap(myStrings_2[i]) << endl;
  }
}
